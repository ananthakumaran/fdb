env:
  FDB_VERSION: "6.3.18"
on:
  - push
  - pull_request
jobs:
  linux:
    runs-on: ubuntu-latest
    name: OS Linux / OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: 1.9.4
            otp: 22.3
          - elixir: 1.10.4
            otp: 22.3
          - elixir: 1.11.4
            otp: 23.3
          - elixir: 1.12.3
            otp: 24.1
            bindings_test: true
          - elixir: 1.13.0
            otp: 24.1
            check_warnings: true
            check_format: true
            dialyzer: true
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - name: Install
        run: |
          sudo apt-get install -y build-essential python-dev python3-pip
          wget "https://www.foundationdb.org/downloads/${{ env.FDB_VERSION }}/ubuntu/installers/foundationdb-clients_$FDB_VERSION-1_amd64.deb"
          sudo dpkg -i "foundationdb-clients_${{ env.FDB_VERSION }}-1_amd64.deb"
          wget "https://www.foundationdb.org/downloads/${{ env.FDB_VERSION }}/ubuntu/installers/foundationdb-server_$FDB_VERSION-1_amd64.deb"
          sudo dpkg -i "foundationdb-server_${{ env.FDB_VERSION }}-1_amd64.deb"
      - run: mix deps.get
      - run: mix format --check-formatted
        if: ${{ matrix.check_format }}
      - run: mix compile --force --warnings-as-errors
        if: ${{ matrix.check_warnings }}
      - run: mix test --trace --include integration
      - if: ${{ matrix.bindings_test }}
        run: |
          curl -L "https://github.com/apple/foundationdb/archive/${{ env.FDB_VERSION }}.tar.gz" > foundation.tar.gz
          tar -xf foundation.tar.gz
          rm foundation.tar.gz
          mv foundationdb-$FDB_VERSION foundationdb
          cd foundationdb
          sed "s:USER_SITE_PATH:$(python3 -m site --user-site):g" ../test/foundationdb.patch | patch -p1
          cd ..
          pip3 install --user "http://www.foundationdb.org/downloads/${{ env.FDB_VERSION }}/bindings/python/foundationdb-${{ env.FDB_VERSION }}.tar.gz"
          pip3 show foundationdb
          ./test/loop.sh
      - name: Restore PLT cache
        uses: actions/cache@v2
        if: ${{ matrix.dialyzer }}
        id: plt_cache
        with:
          key: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          restore-keys: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          path: |
            priv/plts
      # Create PLTs if no cache was found
      - name: Create PLTs
        if: ${{ matrix.dialyzer && steps.plt_cache.outputs.cache-hit != 'true' }}
        run: mix dialyzer --plt
      - name: Run dialyzer
        if: ${{ matrix.dialyzer }}
        run: mix dialyzer
  mac:
    runs-on: macos-latest
    name: OS MacOS
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: |
          brew update
          brew install elixir
          curl -L "https://www.foundationdb.org/downloads/$FDB_VERSION/macOS/installers/FoundationDB-${{ env.FDB_VERSION }}.pkg" > "FoundationDB-${{ env.FDB_VERSION }}.pkg"
          sudo installer  -allowUntrusted -verboseR -pkg "FoundationDB-${{ env.FDB_VERSION }}.pkg" -target /
          mix local.rebar --force
          mix local.hex --force
      - run: mix deps.get
      - run: mix test --trace --include integration
